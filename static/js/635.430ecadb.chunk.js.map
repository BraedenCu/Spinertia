{"version":3,"file":"static/js/635.430ecadb.chunk.js","mappings":"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","sources":["common/SvgIcon/index.tsx","components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","common/Button/styles.ts","common/Button/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import { SvgIconProps } from \"../types\";\r\n\r\nexport const SvgIcon = ({ src, width, height }: SvgIconProps) => (\r\n  <img src={`/img/svg/${src}`} alt={src} width={width} height={height} />\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const LeftContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #161A30;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  LeftContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n} from \"./styles\";\r\n\r\nconst LeftContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  return (\r\n    <LeftContentSection>\r\n      <Fade direction=\"left\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ServiceWrapper>\r\n                <Row justify=\"space-between\">\r\n                  {typeof section === \"object\" &&\r\n                    section.map((item: any, id: number) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                          <MinTitle>{t(item.title)}</MinTitle>\r\n                          <MinPara>{t(item.content)}</MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </ServiceWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </LeftContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<any>`\r\n  background: ${(p) => p.color || \"#B6C4B6\"};\r\n  color: ${(p) => (p.color ? \"#163020\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #EEF0E5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(152 251 152 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #EEF0E5;\r\n    border: 1px solid #EEF0E5;\r\n    background-color: #EEF0E5;\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({\r\n  color,\r\n  fixedWidth,\r\n  children,\r\n  onClick,\r\n}: ButtonProps) => (\r\n  <StyledButton color={color} fixedWidth={fixedWidth} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const RightBlockContainer = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { Button } from \"../../../common/Button\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  RightBlockContainer,\r\n  Content,\r\n  ContentWrapper,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst RightBlock = ({\r\n  title,\r\n  content,\r\n  button,\r\n  icon,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  return (\r\n    <RightBlockContainer>\r\n      <Fade direction=\"right\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        fixedWidth={true}\r\n                        onClick={() => scrollTo(\"about\")}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import LeftContentBlock from \"./LeftContentBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\nimport { ContentBlockProps } from \"./types\";\r\n\r\nconst ContentBlock = (props: ContentBlockProps) => {\r\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n  return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"names":["SvgIcon","_ref","src","width","height","_jsx","concat","alt","LeftContentSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","ContentWrapper","_templateObject3","ServiceWrapper","_templateObject4","MinTitle","_templateObject5","MinPara","_templateObject6","withTranslation","icon","title","content","section","t","id","children","Fade","direction","_jsxs","Row","justify","align","Col","lg","md","sm","xs","map","item","span","StyledButton","p","color","Button","fixedWidth","onClick","RightBlockContainer","ButtonWrapper","button","document","getElementById","scrollIntoView","behavior","scrollTo","props","type","LeftContentBlock","RightContentBlock"],"sourceRoot":""}